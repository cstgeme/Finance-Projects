import yfinance as yf
from datetime import date

def yearfrac(endDate):
    today = date.today()
    return ((endDate-today).days) / 365

def getStockPrice(ticker):
    ticker = yf.Ticker(ticker)
    return round(ticker.fast_info['last_price'],2)

def dividendDiscountModel():
    ticker = input("What is the stock ticker?")
    discount = float(input("What is the discount rate? Enter as decimal"))
    numDiv = int(input("How many forecasted dividends are there?"))
    forecastDividends = []
    for i in range(0,numDiv):
        div = float(input("What is the dividend for the " + str(2025+i)+ " fiscal year?"))
        forecastDividends.append(div)
    termGrowth = float(input("What is the terminal growth rate? Enter as decimal"))
    if discount < termGrowth:
        print("Error: Discount Rate must be greater than Terminal Growth Rate")
        return
    value = 0
    forecastDividends[0] = yearfrac(date(2025,12,31))*forecastDividends[0]
    for i in range(0,len(forecastDividends)):
        value += forecastDividends[i]/(1+discount)**yearfrac(date(2025+i,12,31))
    terminalDiv = forecastDividends[-1]*(1+termGrowth)
    perpetuity = terminalDiv / (discount-termGrowth)
    discountedPerpetuity = perpetuity / (1 + discount) ** yearfrac(date(2025+len(forecastDividends)-1,12,31))
    value+=discountedPerpetuity
    print(f"The intrinsic value of {ticker} is ${value:.2f}")
    price = getStockPrice(ticker)
    print(f"The current price of {ticker} is ${price:.2f}")
    if(value > 1.05*price):
        print("I'd recommend buying the stock")
    elif(value < 0.95*price):
        print("I'd recommend selling the stock")
    else:
        print("I'd recommend holding the stock")

dividendDiscountModel()
